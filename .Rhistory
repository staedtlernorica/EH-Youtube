.data = eh,
.variables = "series",
.fun = function(x) tail(x,n=1)
last_eps <- ddply(
last_eps <- ddply(
.data = eh,
.variables = "series",
.fun = function(x) tail(x,n=1)
last_eps <- ddply(
#https://swcarpentry.github.io/r-novice-gapminder/12-plyr/
#based on series, select the final episode
last_eps <- ddply(
.data = eh,
.variables = "series",
.fun = function(x) tail(x,n=1)
)
View(last_eps)
#https://stackoverflow.com/a/26114852/6030118 > no.vid column
ss <- eh %>%
group_by(series) %>%
transmute(views, likes, dislikes, comments, duration) %>%
summarize(sum(views), vids = length(series), sum(likes), sum(dislikes), sum(comments), sum(duration))
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Work/Desktop/EH Youtube")
#https://stackoverflow.com/a/8538071 --- date in a
series_csv <- c('./EH Series Sorted ', format(Sys.time(), "%Y-%m-%d"), '.csv')
series_csv <- paste(series_csv, collapse ="")
#https://stackoverflow.com/questions/22974765/  >>> fileEncoding="UTF-8-BOM"
#get rid of weird symbol in dates
#header = FALSE, or else names(yt/wikia) will replace first row
eh<- read.csv(file = series_csv, fileEncoding="UTF-8-BOM", header = FALSE)
names(eh) <- c('title', 'series', 'date', 'views', 'likes',
'dislikes', 'comments', 'id', 'duration')
#https://stackoverflow.com/q/29150252/6030118   sapply + gsub together
#https://stackoverflow.com/q/7992436/6030118    remove Extra History
eh[,1] <- sapply(eh[,1], function(x) gsub("\\- Extra History ","",as.character(x)))
#struggled before because put these before names(yt/wikia), so R doesn't
#know what yt/wikia$date is
eh$date <- as.Date(eh$date, '%Y-%m-%d')
eh$series <- as.factor(eh$series)
str((eh))
eh[, 'year'] <- as.numeric(format(as.Date(eh$date, format='%Y-%m-%d'),"%Y"))
eh$year <- factor(eh$year, ordered = TRUE, levels =c(2013:2021))
library("plyr")
library("tidyverse")
library("scales")
#not all the times use pipe %>%
#https://stackoverflow.com/questions/22867077/  >>> need to assign output to something
eh <- mutate(eh, daysSince = as.Date(Sys.Date()) - date)  #convert everything to date obj
eh$daysSince <- as.numeric(eh$daysSince)                  #convert dateSince from date to numeiric
eh <- mutate(eh, viewsPerDay = round(views/daysSince))    #round viewsPerDay to nearest integer
#yt <- yt[ ,c(1,9,10,3:6,8,2,7)]       #rearrange columns; datesSince/viewsPerDay 2nd/3rd, dates/id 9/10th
eh1 <- eh %>%
group_by(series) %>%
transmute(seriesLength = length(series))
eh <- cbind(eh, eh1[,2])
rm(eh1)
#https://swcarpentry.github.io/r-novice-gapminder/12-plyr/
#based on series, select the final episode
last_eps <- ddply(
.data = eh,
.variables = "series",
.fun = function(x) tail(x,n=1)
)
#based on the finished date, assign series number
last_eps <- last_eps %>%
arrange(date) %>%
transmute(series, seriesNo = c(1:nlevels(eh$series)))
eh <- eh %>%
inner_join(last_eps, by = c('series' = 'series'))
#https://stackoverflow.com/a/49343023/6030118
eh <- eh %>%
group_by(series) %>%
mutate(epNo = row_number())
sum_views <- eh %>%
arrange(seriesNo) %>%
transmute(series, seriesNo, views, year) %>%
group_by(seriesNo, series) %>%
summarise(seriesViews = sum(views), .groups ="keep")
ap <- ggplot(sum_views, aes(x = seriesViews, y = fct_reorder(series,seriesNo, .desc = TRUE))) +
geom_point(size=3) +
theme(axis.text.y = element_text(angle = 0, vjust = 0.25)) +
labs(title = "Breaking Down Extra History Viewership By Series\n", x = "Views", y = "Series")
ap <- ap + scale_x_continuous( labels = comma) +
geom_hline(yintercept=1.5) +
geom_hline(yintercept=11.5) +
geom_hline(yintercept=24.5) +
geom_hline(yintercept=36.5) +
geom_hline(yintercept=47.5) +
geom_hline(yintercept=58.5) +
geom_hline(yintercept=64.5) +
geom_hline(yintercept=66.5) +
annotate("text", label = "2021", x = 5900000, y = 1) +
annotate("text", label = "2020", x = 5900000, y = 11)+
annotate("text", label = "2019", x = 5900000, y = 24)+
annotate("text", label = "2018", x = 5900000, y = 36)+
annotate("text", label = "2017", x = 5900000, y = 47)+
annotate("text", label = "2016", x = 5900000, y = 58)+
annotate("text", label = "2015", x = 5900000, y = 64)+
annotate("text", label = "2014", x = 5900000, y = 66)+
annotate("text", label = "2013", x = 5900000, y = 67.25)
ap
#order the series (factor) by year (factor) -> need to convert year to numeric
#https://forcats.tidyverse.org/reference/fct_reorder.html#arguments
#adapted idea for alternating  year color from here
#https://stackoverflow.com/a/49277491
#https://stackoverflow.com/a/23637666
dp <- ggplot(eh, aes(x = views, y = fct_reorder(series,seriesNo, .desc = TRUE), color = (as.numeric(year) %% 2 == 0))) +
geom_point(size=3, shape = 1) +
theme(axis.text.y = element_text(angle = 0, vjust = 0.25)) +
labs(title = "Extra History's Series Viewership, Organized by Upload Order\n", x = "Views", y = "Series", color = "Alternating Year\n") +
scale_color_manual(labels = c("Odd Year", "Even Year"), values = c("blue", "red"))
# scale_x_continuous(minor_breaks = seq(1, 10, 1))
#https://stackoverflow.com/a/14564102
require(scales)
#https://ggplot2.tidyverse.org/reference/annotate.html
dp <- dp + scale_x_continuous( labels = comma) +
geom_hline(yintercept=1.5) +
geom_hline(yintercept=11.5) +
geom_hline(yintercept=24.5) +
geom_hline(yintercept=36.5) +
geom_hline(yintercept=47.5) +
geom_hline(yintercept=58.5) +
geom_hline(yintercept=64.5) +
geom_hline(yintercept=66.5) +
annotate("text", label = "2021", x = 5900000, y = 1) +
annotate("text", label = "2020", x = 5900000, y = 11)+
annotate("text", label = "2019", x = 5900000, y = 24)+
annotate("text", label = "2018", x = 5900000, y = 36)+
annotate("text", label = "2017", x = 5900000, y = 47)+
annotate("text", label = "2016", x = 5900000, y = 58)+
annotate("text", label = "2015", x = 5900000, y = 64)+
annotate("text", label = "2014", x = 5900000, y = 66)+
annotate("text", label = "2013", x = 5900000, y = 67.25)
#https://stackoverflow.com/a/36227283/6030118
bp <- dp +
geom_point(data = sum_views, colour = 'black', aes(x = seriesViews, y = series))
dp
bp
#4 series posted across two years (byzantine, sengoku, sun yat sen, khosrau)
#replaced series with year in group_by, and add year in transmute
sum_year <- eh %>%
group_by(year) %>%
transmute(series, views, likes, year, dislikes, comments, duration) %>%
summarize(sum(views), vids = length(series), sum(likes), sum(dislikes), sum(comments), sum(duration))
names(sum_year) <- c("year","views", "vids", "likes", "dislikes", "comments", "duration")
sum_year
lik <- sum_year %>% transmute(year = year, count = likes, vids = vids)
lik <- cbind(lik, test = rep('like', 9))
dlik <- sum_year %>% transmute(year = year, count = dislikes, vids = vids)
dlik <- cbind(dlik, test = rep('dislike', 9))
tbl <- rbind(lik, dlik)
ggplot(tbl, aes(year, count, fill = test, label = vids)) +
geom_col(position = "identity") + ylab("no. of votes") +
geom_text(position = "stack", stat = "identity", vjust = -0.5, check_overlap = TRUE)
x <- split(eh, eh$series)
summary(eh$views[eh$year > 2017])
b <- eh %>% group_by(series) %>% slice_min(views, n=1)
#https://stackoverflow.com/a/49719409/6030118 >>> numbers above bars
ggplot(sum_year, aes(x = year, y = views)) + geom_col() + geom_text(aes(label = vids), vjust = -0.5)
ggplot(sum_year, aes(x = year, y = likes)) + geom_col() + geom_text(aes(label = vids), vjust = -0.5)
ggplot(sum_year, aes(x = year, y = dislikes)) + geom_col() + geom_text(aes(label = vids), vjust = -0.5)
ggplot(sum_year, aes(x = year, y = comments)) + geom_col() + geom_text(aes(label = vids), vjust = -0.5)
ggplot(sum_year, aes(x = year, y = duration)) + geom_col() + geom_text(aes(label = vids), vjust = -0.5)
#https://stackoverflow.com/a/26114852/6030118 > no.vid column
ss <- eh %>%
group_by(series) %>%
transmute(views, likes, dislikes, comments, duration) %>%
summarize(sum(views), vids = length(series), sum(likes), sum(dislikes), sum(comments), sum(duration))
names(ss) <- c("series","views", "vids", "likes", "dislikes", "comments", "duration")
ss
View(ss)
View(eh)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Work/Desktop/EH Youtube")
#https://stackoverflow.com/a/8538071 --- date in a
series_csv <- c('./EH Series Sorted ', format(Sys.time(), "%Y-%m-%d"), '.csv')
series_csv <- paste(series_csv, collapse ="")
#https://stackoverflow.com/questions/22974765/  >>> fileEncoding="UTF-8-BOM"
#get rid of weird symbol in dates
#header = FALSE, or else names(yt/wikia) will replace first row
eh<- read.csv(file = series_csv, fileEncoding="UTF-8-BOM", header = FALSE)
names(eh) <- c('title', 'series', 'date', 'views', 'likes',
'dislikes', 'comments', 'id', 'duration')
#https://stackoverflow.com/q/29150252/6030118   sapply + gsub together
#https://stackoverflow.com/q/7992436/6030118    remove Extra History
eh[,1] <- sapply(eh[,1], function(x) gsub("\\- Extra History ","",as.character(x)))
#struggled before because put these before names(yt/wikia), so R doesn't
#know what yt/wikia$date is
eh$date <- as.Date(eh$date, '%Y-%m-%d')
eh$series <- as.factor(eh$series)
str((eh))
eh[, 'year'] <- as.numeric(format(as.Date(eh$date, format='%Y-%m-%d'),"%Y"))
eh$year <- factor(eh$year, ordered = TRUE, levels =c(2013:2021))
library("plyr")
library("tidyverse")
library("scales")
#not all the times use pipe %>%
#https://stackoverflow.com/questions/22867077/  >>> need to assign output to something
eh <- mutate(eh, daysSince = as.Date(Sys.Date()) - date)  #convert everything to date obj
eh$daysSince <- as.numeric(eh$daysSince)                  #convert dateSince from date to numeiric
eh <- mutate(eh, viewsPerDay = round(views/daysSince))    #round viewsPerDay to nearest integer
#https://stackoverflow.com/a/49343023/6030118
eh <- eh %>%
group_by(series) %>%
mutate(epNo = row_number())
eh1 <- eh %>%
group_by(series) %>%
transmute(seriesLength = length(series))
eh <- cbind(eh, eh1[,2])
rm(eh1)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Work/Desktop/EH Youtube")
#https://stackoverflow.com/a/8538071 --- date in a
series_csv <- c('./EH Series Sorted ', format(Sys.time(), "%Y-%m-%d"), '.csv')
series_csv <- paste(series_csv, collapse ="")
#https://stackoverflow.com/questions/22974765/  >>> fileEncoding="UTF-8-BOM"
#get rid of weird symbol in dates
#header = FALSE, or else names(yt/wikia) will replace first row
eh<- read.csv(file = series_csv, fileEncoding="UTF-8-BOM", header = FALSE)
names(eh) <- c('title', 'series', 'date', 'views', 'likes',
'dislikes', 'comments', 'id', 'duration')
#https://stackoverflow.com/q/29150252/6030118   sapply + gsub together
#https://stackoverflow.com/q/7992436/6030118    remove Extra History
eh[,1] <- sapply(eh[,1], function(x) gsub("\\- Extra History ","",as.character(x)))
#struggled before because put these before names(yt/wikia), so R doesn't
#know what yt/wikia$date is
eh$date <- as.Date(eh$date, '%Y-%m-%d')
eh$series <- as.factor(eh$series)
str((eh))
eh[, 'year'] <- as.numeric(format(as.Date(eh$date, format='%Y-%m-%d'),"%Y"))
eh$year <- factor(eh$year, ordered = TRUE, levels =c(2013:2021))
library("plyr")
library("tidyverse")
library("scales")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Work/Desktop/EH Youtube")
#https://stackoverflow.com/a/8538071 --- date in a
series_csv <- c('./EH Series Sorted ', format(Sys.time(), "%Y-%m-%d"), '.csv')
series_csv <- paste(series_csv, collapse ="")
#https://stackoverflow.com/questions/22974765/  >>> fileEncoding="UTF-8-BOM"
#get rid of weird symbol in dates
#header = FALSE, or else names(yt/wikia) will replace first row
eh<- read.csv(file = series_csv, fileEncoding="UTF-8-BOM", header = FALSE)
names(eh) <- c('title', 'series', 'date', 'views', 'likes',
'dislikes', 'comments', 'id', 'duration')
#https://stackoverflow.com/q/29150252/6030118   sapply + gsub together
#https://stackoverflow.com/q/7992436/6030118    remove Extra History
eh[,1] <- sapply(eh[,1], function(x) gsub("\\- Extra History ","",as.character(x)))
#struggled before because put these before names(yt/wikia), so R doesn't
#know what yt/wikia$date is
eh$date <- as.Date(eh$date, '%Y-%m-%d')
eh$series <- as.factor(eh$series)
str((eh))
eh[, 'year'] <- as.numeric(format(as.Date(eh$date, format='%Y-%m-%d'),"%Y"))
eh$year <- factor(eh$year, ordered = TRUE, levels =c(2013:2021))
library("plyr")
library("tidyverse")
library("scales")
#not all the times use pipe %>%
#https://stackoverflow.com/questions/22867077/  >>> need to assign output to something
eh <- mutate(eh, daysSince = as.Date(Sys.Date()) - date)  #convert everything to date obj
eh$daysSince <- as.numeric(eh$daysSince)                  #convert dateSince from date to numeiric
eh <- mutate(eh, viewsPerDay = round(views/daysSince))    #round viewsPerDay to nearest integer
#yt <- yt[ ,c(1,9,10,3:6,8,2,7)]       #rearrange columns; datesSince/viewsPerDay 2nd/3rd, dates/id 9/10th
#https://stackoverflow.com/a/49343023/6030118
eh <- eh %>%
group_by(series) %>%
mutate(epNo = row_number())
eh1 <- eh %>%
group_by(series) %>%
transmute(seriesLength = length(series))
eh <- cbind(eh, eh1[,2])
rm(eh1)
#https://swcarpentry.github.io/r-novice-gapminder/12-plyr/
#based on series, select the final episode
last_eps <- ddply(
.data = eh,
.variables = "series",
.fun = function(x) tail(x,n=1)
)
#based on the finished date, assign series number
eh <- last_eps %>%
arrange(date) %>%
transmute(series, seriesNo = c(1:nlevels(eh$series))) %>%
inner_join(last_eps, by = c('series' = 'series'))
View(eh)
#not all the times use pipe %>%
#https://stackoverflow.com/questions/22867077/  >>> need to assign output to something
eh <- mutate(eh, daysSince = as.Date(Sys.Date()) - date)  #convert everything to date obj
eh$daysSince <- as.numeric(eh$daysSince)                  #convert dateSince from date to numeiric
eh <- mutate(eh, viewsPerDay = round(views/daysSince))    #round viewsPerDay to nearest integer
#yt <- yt[ ,c(1,9,10,3:6,8,2,7)]       #rearrange columns; datesSince/viewsPerDay 2nd/3rd, dates/id 9/10th
#https://stackoverflow.com/a/49343023/6030118
eh <- eh %>%
group_by(series) %>%
mutate(epNo = row_number())
eh1 <- eh %>%
group_by(series) %>%
transmute(seriesLength = length(series))
eh <- cbind(eh, eh1[,2])
rm(eh1)
#https://swcarpentry.github.io/r-novice-gapminder/12-plyr/
#based on series, select the final episode
last_eps <- ddply(
.data = eh,
.variables = "series",
.fun = function(x) tail(x,n=1)
)
#based on the finished date, assign series number
last_eps <- last_eps %>%
arrange(date) %>%
transmute(series, seriesNo = c(1:nlevels(eh$series))) %>%
eh <- eh %>%
inner_join(last_eps, by = c('series' = 'series'))
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Work/Desktop/EH Youtube")
#https://stackoverflow.com/a/8538071 --- date in a
series_csv <- c('./EH Series Sorted ', format(Sys.time(), "%Y-%m-%d"), '.csv')
series_csv <- paste(series_csv, collapse ="")
#https://stackoverflow.com/questions/22974765/  >>> fileEncoding="UTF-8-BOM"
#get rid of weird symbol in dates
#header = FALSE, or else names(yt/wikia) will replace first row
eh<- read.csv(file = series_csv, fileEncoding="UTF-8-BOM", header = FALSE)
names(eh) <- c('title', 'series', 'date', 'views', 'likes',
'dislikes', 'comments', 'id', 'duration')
#https://stackoverflow.com/q/29150252/6030118   sapply + gsub together
#https://stackoverflow.com/q/7992436/6030118    remove Extra History
eh[,1] <- sapply(eh[,1], function(x) gsub("\\- Extra History ","",as.character(x)))
#struggled before because put these before names(yt/wikia), so R doesn't
#know what yt/wikia$date is
eh$date <- as.Date(eh$date, '%Y-%m-%d')
eh$series <- as.factor(eh$series)
str((eh))
eh[, 'year'] <- as.numeric(format(as.Date(eh$date, format='%Y-%m-%d'),"%Y"))
eh$year <- factor(eh$year, ordered = TRUE, levels =c(2013:2021))
library("plyr")
library("tidyverse")
library("scales")
#not all the times use pipe %>%
#https://stackoverflow.com/questions/22867077/  >>> need to assign output to something
eh <- mutate(eh, daysSince = as.Date(Sys.Date()) - date)  #convert everything to date obj
eh$daysSince <- as.numeric(eh$daysSince)                  #convert dateSince from date to numeiric
eh <- mutate(eh, viewsPerDay = round(views/daysSince))    #round viewsPerDay to nearest integer
#yt <- yt[ ,c(1,9,10,3:6,8,2,7)]       #rearrange columns; datesSince/viewsPerDay 2nd/3rd, dates/id 9/10th
#https://stackoverflow.com/a/49343023/6030118
eh <- eh %>%
group_by(series) %>%
mutate(epNo = row_number())
eh1 <- eh %>%
group_by(series) %>%
transmute(seriesLength = length(series))
eh <- cbind(eh, eh1[,2])
rm(eh1)
#https://swcarpentry.github.io/r-novice-gapminder/12-plyr/
#based on series, select the final episode
last_eps <- ddply(
.data = eh,
.variables = "series",
.fun = function(x) tail(x,n=1)
)
#based on the finished date, assign series number
last_eps <- last_eps %>%
arrange(date) %>%
transmute(series, seriesNo = c(1:nlevels(eh$series))) %>%
eh <- eh %>%
inner_join(last_eps, by = c('series' = 'series'))
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Work/Desktop/EH Youtube")
#https://stackoverflow.com/a/8538071 --- date in a
series_csv <- c('./EH Series Sorted ', format(Sys.time(), "%Y-%m-%d"), '.csv')
series_csv <- paste(series_csv, collapse ="")
#https://stackoverflow.com/questions/22974765/  >>> fileEncoding="UTF-8-BOM"
#get rid of weird symbol in dates
#header = FALSE, or else names(yt/wikia) will replace first row
eh<- read.csv(file = series_csv, fileEncoding="UTF-8-BOM", header = FALSE)
names(eh) <- c('title', 'series', 'date', 'views', 'likes',
'dislikes', 'comments', 'id', 'duration')
#https://stackoverflow.com/q/29150252/6030118   sapply + gsub together
#https://stackoverflow.com/q/7992436/6030118    remove Extra History
eh[,1] <- sapply(eh[,1], function(x) gsub("\\- Extra History ","",as.character(x)))
#struggled before because put these before names(yt/wikia), so R doesn't
#know what yt/wikia$date is
eh$date <- as.Date(eh$date, '%Y-%m-%d')
eh$series <- as.factor(eh$series)
str((eh))
eh[, 'year'] <- as.numeric(format(as.Date(eh$date, format='%Y-%m-%d'),"%Y"))
eh$year <- factor(eh$year, ordered = TRUE, levels =c(2013:2021))
library("plyr")
library("tidyverse")
library("scales")
#not all the times use pipe %>%
#https://stackoverflow.com/questions/22867077/  >>> need to assign output to something
eh <- mutate(eh, daysSince = as.Date(Sys.Date()) - date)  #convert everything to date obj
eh$daysSince <- as.numeric(eh$daysSince)                  #convert dateSince from date to numeiric
eh <- mutate(eh, viewsPerDay = round(views/daysSince))    #round viewsPerDay to nearest integer
#yt <- yt[ ,c(1,9,10,3:6,8,2,7)]       #rearrange columns; datesSince/viewsPerDay 2nd/3rd, dates/id 9/10th
#https://stackoverflow.com/a/49343023/6030118
eh <- eh %>%
group_by(series) %>%
mutate(epNo = row_number())
eh1 <- eh %>%
group_by(series) %>%
transmute(seriesLength = length(series))
eh <- cbind(eh, eh1[,2])
rm(eh1)
#https://swcarpentry.github.io/r-novice-gapminder/12-plyr/
#based on series, select the final episode
last_eps <- ddply(
.data = eh,
.variables = "series",
.fun = function(x) tail(x,n=1)
)
#based on the finished date, assign series number
last_eps <- last_eps %>%
arrange(date) %>%
transmute(series, seriesNo = c(1:nlevels(eh$series)))
eh <- eh %>%
inner_join(last_eps, by = c('series' = 'series'))
View(eh)
count(eh$seriesLength)
nlevels(eh$seriesLength)
nrow(eh$seriesLength)
class(eh$seriesLength)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Work/Desktop/EH Youtube")
#https://stackoverflow.com/a/8538071 --- date in a
series_csv <- c('./EH Series Sorted ', format(Sys.time(), "%Y-%m-%d"), '.csv')
series_csv <- paste(series_csv, collapse ="")
#https://stackoverflow.com/questions/22974765/  >>> fileEncoding="UTF-8-BOM"
#get rid of weird symbol in dates
#header = FALSE, or else names(yt/wikia) will replace first row
eh<- read.csv(file = series_csv, fileEncoding="UTF-8-BOM", header = FALSE)
install.packages("reticulate")
# Loads Python Shell
repl_python()
# https://rstudio.github.io/reticulate/
# install.packages("reticulate")
library(reticulate)
# Loads Python Shell
repl_python()
reticulate::py_config()
# Load a particular Python version on our system
use_python("C:/Program Files/Python38", required = TRUE)
# Load a particular Python version on our system
use_python("C:/Program Files/Python38", required = TRUE)
quit
source('C:/Users/Work/Desktop/using-reticulate.R', echo=TRUE)
quit
# Load a particular Python version on our system
use_python("C:/Work/AppData/Roaming/Microsft/Windows/Start Menu/Programs/Python 3.9", required = TRUE)
Rscript -e "print(Sys.which("python"))"
Rscript -e print(Sys.which("python"))
Rscript -e "print(Sys.which(python))"
R.home()
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Work/Desktop/EH Youtube")
#https://stackoverflow.com/a/8538071 --- date in a
series_csv <- c('./EH Series Sorted ', format(Sys.time(), "%Y-%m-%d"), '.csv')
series_csv <- paste(series_csv, collapse ="")
#https://stackoverflow.com/questions/22974765/  >>> fileEncoding="UTF-8-BOM"
#get rid of weird symbol in dates
#header = FALSE, or else names(yt/wikia) will replace first row
eh<- read.csv(file = series_csv, fileEncoding="UTF-8-BOM", header = FALSE)
setwd("C:/Users/Work/Desktop/EH Youtube")
setwd("C:/Users/Work/Desktop/EH Youtube")
#https://stackoverflow.com/a/8538071 --- date in a
series_csv <- c('./EH Series Sorted ', format(Sys.time(), "%Y-%m-%d"), '.csv')
series_csv <- paste(series_csv, collapse ="")
library(reticulate)
library(reticulate)
setwd("C:/Users/Work/Desktop/EH Youtube")
py_run_file("print("Hello World")")
py_run_string("print(my_python_array)")
source('~/.active-rstudio-document', echo=TRUE)
library(reticulate)
setwd("C:/Users/Work/Desktop/EH Youtube")
py_run_string("import numpy as np")
py_run_string("my_python_array = np.array([2,4,6,8])")
py_run_string("print(my_python_array)")
py_run_string("print(my_python_array)")
library(reticulate)
setwd("C:/Users/Work/Desktop/EH Youtube")
py_run_string("import numpy as np")
py_run_string("my_python_array = np.array([2,4,6,8])")
py_run_string("print(my_python_array)")
knitr::opts_chunk$set(echo = TRUE)
library("reticulate")
use_python("/usr/bin/python")
print("hello world")
knitr::opts_chunk$set(echo = TRUE)
library("reticulate")
use_python("/usr/bin/python")
from datetime import date
knitr::opts_chunk$set(echo = TRUE)
library("reticulate")
use_python("/usr/bin/python")
knitr::opts_chunk$set(echo = TRUE)
library("reticulate")
use_python("/usr/bin/python")
#knitr::opts_chunk$set(echo = TRUE)
library("reticulate")
use_python("/usr/bin/python")
#knitr::opts_chunk$set(echo = TRUE)
library("reticulate")
#use_python("/usr/bin/python")
R.version
#knitr::opts_chunk$set(echo = TRUE)
library("reticulate")
#use_python("/usr/bin/python")
reticulate::py_config()
reticulate::use_condaenv()
